install.packages('smartextract')
install.packages('smartcleaning')
## Upload Kenya admin2 level
ken_admin2 <- mast::ken_admin2
shiny::runApp('SMART_Surveys_App/smart_app')
install.packages('smartextract')
install.packages("smartextract")
shiny::runApp('SMART_Surveys_App/smart_app')
runApp('SMART_Surveys_App/smart_app')
install.packages("smartextract")
install.packages("smartextract")
shiny::runApp('SMART_Surveys_App/smart_app')
runApp('SMART_Surveys_App/smart_app')
install.packages('smartcleaning')
install.packages("smartcleaning")
shiny::runApp('SMART_Surveys_App/smart_app')
runApp('SMART_Surveys_App/smart_app')
runApp('SMART_Surveys_App/smart_app')
install.packages("smartcleaning")
install.packages("smartcleaning")
shiny::runApp('SMART_Surveys_App/smart_app')
shiny::runApp('SMART_Surveys_App/smart_app')
shiny::runApp('SMART_Surveys_App/smart_app')
shiny::runApp('SMART_Surveys_App/smart_app')
install.packages('smartcleaning')
install.packages("smartcleaning")
shiny::runApp('SMART_Surveys_App/smart_app')
shiny::runApp()
install.packages('smartcleaning')
install.packages("smartcleaning")
install.packages("smartextract")
shiny::runApp()
install.packages('smartextract')
install.packages("smartextract")
shiny::runApp()
install.packages("smartextract")
install.packages("smartextract")
shiny::runApp()
install.packages("smartextract")
install.packages("smartextract")
shiny::runApp()
install.packages("smartextract")
install.packages("smartextract")
shiny::runApp()
install.packages("smartextract")
install.packages("smartextract")
shiny::runApp()
install.packages("smartextract")
install.packages("smartextract")
shiny::runApp()
shiny::runApp()
install.packages('smartcleaning')
install.packages("smartcleaning")
system.file("extdata", "reference_doc.docx", package = "smartcleaning")
install.packages('smartcleaning')
system.file("extdata", "reference_doc.docx", package = "smartcleaning")
install.packages('smartcleaning')
system.file("extdata", "reference_doc.docx", package = "smartcleaning")
system.file("extdata/reference_doc", package = "reports")
system.file("extdata/reference_doc", package = "smartcleaning")
system.file("extdata/reference_doc.docx", package = "smartcleaning")
system.file("extdata/reference_doc.doc", package = "smartcleaning")
system.file("extdata/reference_doc.docx", package = "smartcleaning")
install.packages('smartcleaning')
install.packages("smartcleaning")
shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
install.packages('smartcleaning')
install.packages("smartcleaning")
install.packages("smartextract")
install.packages("smartmetadata")
shiny::runApp()
runApp()
library(shiny); runApp('reassure_main.R')
library(shiny); runApp('reassure_main.R')
library(shiny); runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
library(shiny); runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
country
handle_issues(
smart_folder = paste(survey_path(), '/', sep=""),
output_dir = paste(output_path(), '/', sep=""),
country = country,
session = session,
country_data = country_data
)
log_file <- rio::import(paste(paste(output_path(), '/', 'metadata.csv', sep="")))
smartextract::f_plot_log_file(log_file)
new_localization
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
paste(survey_path(), '/', sep="")
paste(output_path(), '/', sep="")
country
session
country_data
log_file <- rio::import(paste(paste(output_path(), '/', 'metadata.csv', sep="")))
smartextract::f_plot_log_file(log_file)
country == 'KEN'
country == 'SOM'
admin_list <- smartextract::f_location_possibility('KEN')
# Check for issues in the output directory
# Assuming issues are stored in a specific folder like "Issue"
issue_folder <- file.path(output_dir, "smart_with_issue")
issue_folder <- file.path(output_dir, "smart_with_issue")
output_dir
output_dir = paste(output_path(), '/', sep="")
smart_folder = paste(survey_path(), '/', sep="")
issue_folder <- file.path(output_dir, "smart_with_issue")
log_file <- read.csv(paste(output_dir, 'metadata.csv', sep=""))
files <- list.files(paste(output_dir, 'smart_with_issue', sep=""))
files <- log_file[log_file$old_name %in% files & log_file$type_of_issue == 'Unknown Admin', 'old_name']
nb_files <- length(files)
1:nb_files
new_localization <- input[[paste("new_localization_", ind, sep="")]]
ind <- 1
new_localization <- input[[paste("new_localization_", ind, sep="")]]
new_localization != "Not found"
new_localization
input
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
issue_folder <- file.path(output_dir, "smart_with_issue")
log_file <- read.csv(paste(output_dir, 'metadata.csv', sep = ""))
files <- log_file[log_file$old_name %in% tolower(list.files(issue_folder)) &
log_file$type_of_issue == 'Unknown Admin', 'old_name']
nb_files <- length(files)
nb_files
ind <- 1
file <- files[ind]
file
files
output_dir
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
install.packages('smart_extract')
install.packages('smartextract')
library(smartextract)
library(shiny); runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
input$anthro_survey_path_text
parseDirPath(roots = volumes, input$anthro_survey_path)
type_plot <- input$plot_anthro
type_plot
smartmetadata::f_plot_nutrition_tab(folder_name = anthro_survey_path,
type_plot = type_plot)
anthro_survey_path
anthro_survey_path <- if(cleaning_pushed()) {
input$anthro_survey_path <- input$anthro_survey_path_text
} else {
parseDirPath(roots = volumes, input$anthro_survey_path)
}
parseDirPath(roots = volumes, input$anthro_survey_path)
smartmetadata::f_plot_nutrition_tab(folder_name = input$anthro_survey_path,
type_plot = type_plot)
anthro_survey_path <- if(cleaning_pushed()) {
input$anthro_survey_path_text
} else {
parseDirPath(roots = volumes, input$anthro_survey_path)
}
smartmetadata::f_plot_nutrition_tab(folder_name = anthro_survey_path,
type_plot = type_plot)
anthro_survey_path <-  parseDirPath(roots = volumes, input$anthro_survey_path)
smartmetadata::f_plot_nutrition_tab(folder_name = anthro_survey_path,
type_plot = type_plot)
type_plot
anthro_survey_path
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
install.packages('smart_visualization')
library(smartmetadata)
install.packages('smartmetadata')
library(smartmetadata)
library(shiny); runApp('reassure_main_v2.R')
install.packages('smartmetadata')
library(shiny); runApp('reassure_main_v2.R')
install.packages('smartmetadata')
library(shiny); runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
runApp('reassure_main_v2.R')
library(shiny); runApp('reassure_main.R')
install.packages('smartextract')
library(shiny); runApp('reassure_main.R')
install.packages('smartextract')
library(shiny); runApp('reassure_main.R')
install.packages('smartextract')
library(smartextract)
library(shiny); runApp('reassure_main.R')
runApp('reassure_main.R')
install.packages('smartmetadata')
library(shiny); runApp('reassure_main.R')
runApp('reassure_main.R')
